(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{82:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return u})),r.d(t,"default",(function(){return l}));var n=r(3),o=r(7),a=(r(0),r(93)),i={id:"github",title:"XKF on Github"},s={unversionedId:"xks/operator-guide/github",id:"xks/operator-guide/github",isDocsHomePage:!1,title:"XKF on Github",description:"As a XKF user you can use both Azure DevOps and GitHub to store",source:"@site/docs/xks/operator-guide/github.md",slug:"/xks/operator-guide/github",permalink:"/docs/xks/operator-guide/github",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/xks/operator-guide/github.md",version:"current",sidebar:"docs",previous:{title:"AWS azure-devops",permalink:"/docs/xks/operator-guide/aws-azdo"},next:{title:"AKS",permalink:"/docs/xks/operator-guide/kubernetes/aks"}},u=[{value:"Terraform",id:"terraform",children:[{value:"Workflow",id:"workflow",children:[]},{value:"Self-hosted runners",id:"self-hosted-runners",children:[]},{value:"Azure Service Principal",id:"azure-service-principal",children:[]}]}],c={rightToc:u};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"As a XKF user you can use both Azure DevOps and GitHub to store\nyour terraform and gitops repositories."),Object(a.b)("p",null,"In this document we will go through how to use XKF on GitHub focusing\non Infrastructure As Code (IAC) using Terraform."),Object(a.b)("h2",{id:"terraform"},"Terraform"),Object(a.b)("p",null,"How to run Terraform plan and apply through a GitHub action workflow."),Object(a.b)("h3",{id:"workflow"},"Workflow"),Object(a.b)("p",null,"Just like in azure devops case we have created a ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/XenitAB/azure-devops-templates/terraform-docker-github/README.md"}),"basic pipeline")," for easy use."),Object(a.b)("p",null,"Below you can find a example pipeline that uses the github action workflow.\nRead further down to see how to create the secrets needed to run the pipeline."),Object(a.b)("p",null,"You should store this GitHub action in your Terraform repository under ",Object(a.b)("inlineCode",{parentName:"p"},".github/workflows/name.yaml")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-.github/workflows/core.yaml"}),'name: terraform_core\n\non:\n  push:\n    branches:\n      - main\n    paths:\n      - core/**\n  pull_request:\n    paths:\n      - core/**\n  workflow_dispatch:\n    inputs:\n      OPA_BLAST_RADIUS:\n        description: OPA Blast Radius\n        required: true\n        default: "50"\n\njobs:\n  terraform:\n    uses: xenitab/azure-devops-templates/.github/workflows/terraform-docker.yaml@2021.10.1\n    with:\n      DIR: core\n      runs-on: \'["self-hosted", "linux"]\' # If you don\'t want to use the default ubuntu-latest\n      ENVIRONMENTS: |\n        {\n          "environments":[\n            {"name":"dev"},\n            {"name":"qa"},\n            {"name":"prod"}\n          ]\n        }\n    secrets:\n      AZURE_CREDENTIALS_DEV: ${{ secrets.AZURE_CREDENTIALS_DEV }}\n      AZURE_CREDENTIALS_QA: ${{ secrets.AZURE_CREDENTIALS_QA }}\n      AZURE_CREDENTIALS_PROD: ${{ secrets.AZURE_CREDENTIALS_PROD }}\n')),Object(a.b)("h3",{id:"self-hosted-runners"},"Self-hosted runners"),Object(a.b)("p",null,"It's currently not possible to use self-hosted runners hosted in GitHub organization X while calling on workflows in GitHub organization Y."),Object(a.b)("p",null,"To be able to use self-hosted runners you have to import the repository to organization X ",Object(a.b)("strong",{parentName:"p"},"not fork")," the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/XenitAB/azure-devops-templates"}),"workflow repository"),"\nand make it public. If you don't do this private repositories located in organization X won't be able to find the workflows."),Object(a.b)("h3",{id:"azure-service-principal"},"Azure Service Principal"),Object(a.b)("p",null,"Create a Service Principal(SP) with the access that terraform requires to perform all the tasks you want.\nYou can read more about SP creation in our ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/xks/operator-guide/getting-started"}),"getting started guide")),Object(a.b)("p",null,"The workflow is using ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/marketplace/actions/azure-login#configure-deployment-credentials"}),"Azure Login GitHub Action"),"\nto login to Azure. When uploading your SP to GitHub make sure to follow the formatting in the examples."),Object(a.b)("p",null,"This is to prevent unnecessary masking of { } in your logs which are in dictionary form."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"For example, do"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-.json"}),'{"clientId": "00000000-0000-0000-0000-000000000000",\n  "clientSecret": "super-duper-secret-value",\n  "subscriptionId": "00000000-0000-0000-0000-000000000000",\n  "tenantId": "00000000-0000-0000-0000-000000000000"}\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"instead of"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-.json"}),'{\n  "clientId": "00000000-0000-0000-0000-000000000000",\n  "clientSecret": "super-duper-secret-value",\n  "subscriptionId": "00000000-0000-0000-0000-000000000000",\n  "tenantId": "00000000-0000-0000-0000-000000000000"\n}\n')),Object(a.b)("p",null,"Upload the entire json as your github secret.\nThe workflow uses one secret per environment and we recommend that you follow our namestandard.\nThe secret name the workflow use is ",Object(a.b)("strong",{parentName:"p"},"AZURE",Object(a.b)("em",{parentName:"strong"},"CREDENTIALS"),"\\<ENV",">"),", for  example ",Object(a.b)("strong",{parentName:"p"},"AZURE_CREDENTIALS_DEV")),Object(a.b)("p",null,"To upload the secret to github you can use the github UI or you can use the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/cli/cli"}),"gh cli")," to upload secrets to GitHub."),Object(a.b)("p",null,"Assuming that you are storing the SP json data in a file you could do:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"gh secret -R ORG/xks-terraform set AZURE_CREDENTIALS_DEV < dev-secrets.json\ngh secret -R ORG/xks-terraform set AZURE_CREDENTIALS_QA < qa-secrets.json\ngh secret -R ORG/xks-terraform set AZURE_CREDENTIALS_PROD < prod-secrets.json\n")))}l.isMDXComponent=!0},93:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return h}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=o.a.createContext({}),l=function(e){var t=o.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(r),d=n,h=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return r?o.a.createElement(h,s(s({ref:t},c),{},{components:r})):o.a.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);