(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{113:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),b=(a(0),a(142)),l={title:"OPA Gatekeeper",slug:"/terraform-modules/kubernetes/opa-gatekeeper",custom_edit_url:"https://github.com/XenitAB/terraform-modules/edit/main/modules/kubernetes/opa-gatekeeper/README.md"},c={unversionedId:"terraform-modules/kubernetes/opa-gatekeeper",id:"terraform-modules/kubernetes/opa-gatekeeper",isDocsHomePage:!1,title:"OPA Gatekeeper",description:"Adds opa-gatekeeper and gatekeeper-library to a Kubernetes clusters.",source:"@site/docs/terraform-modules/kubernetes/opa-gatekeeper.md",slug:"/terraform-modules/kubernetes/opa-gatekeeper",permalink:"/docs/terraform-modules/kubernetes/opa-gatekeeper",editUrl:"https://github.com/XenitAB/terraform-modules/edit/main/modules/kubernetes/opa-gatekeeper/README.md",version:"current",sidebar:"docs",previous:{title:"Grafana Loki",permalink:"/docs/terraform-modules/kubernetes/loki"},next:{title:"Prometheus",permalink:"/docs/terraform-modules/kubernetes/prometheus"}},i=[{value:"Requirements",id:"requirements",children:[]},{value:"Providers",id:"providers",children:[]},{value:"Modules",id:"modules",children:[]},{value:"Resources",id:"resources",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Outputs",id:"outputs",children:[]}],o={rightToc:i};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Adds ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/open-policy-agent/gatekeeper"}),Object(b.b)("inlineCode",{parentName:"a"},"opa-gatekeeper"))," and ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/xenitab/gatekeeper-library"}),"gatekeeper-library")," to a Kubernetes clusters."),Object(b.b)("p",null,"Running the gatekeeper is a prerequirement for the library to work, as the library only adds different types of constraints that are used by gatekeeper.\nConstraints are added through first creating a ",Object(b.b)("inlineCode",{parentName:"p"},"ConstraintTemplate")," and then adding a ",Object(b.b)("inlineCode",{parentName:"p"},"Constraint")," that enforces the template. The module constains a list of default\nconstraints in the ",Object(b.b)("inlineCode",{parentName:"p"},"default_constraints")," that are recomended to always be applied. These constraints are cloud agnostic and are either re-implemetnations of specific PSPs\nor orginal constraints meant to enforce best practices. The default constraints will be added if you do not override this variable with either a list of different\nconstraints or an empty list. By default all namespaces expect those specified in the ",Object(b.b)("inlineCode",{parentName:"p"},"excludes")," namespaces will have the constraints enforced. What this means is that\nif a resource does does comform to the constraints added by this module they will not be allowed to be created and will fail when applying."),Object(b.b)("p",null,"Constraints configuration are given in a specific object format that is compatible with the gatekeeper-library values format. The module makes sure that both templates\nand the constraints are created. The example below would create a template with the kind of ",Object(b.b)("inlineCode",{parentName:"p"},"K8sPSPVolumeTypes")," which gatekeeper will create a CRD from, and a constraint\nresource of kind ",Object(b.b)("inlineCode",{parentName:"p"},"K8sPSPVolumeTypes")," that enforces the rule."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-hcl"}),'{\n  kind               = "K8sPSPVolumeTypes"\n  name               = "psp-volume-types"\n  enforcement_action = ""\n  match = {\n    kinds      = []\n    namespaces = []\n  }\n  parameters = {\n    volumes = ["configMap", "downwardAPI", "emptyDir", "persistentVolumeClaim", "secret", "projected"]\n  }\n}\n')),Object(b.b)("p",null,"Certain fields in the configuration object are required while others are not. The ",Object(b.b)("inlineCode",{parentName:"p"},"kind")," and ",Object(b.b)("inlineCode",{parentName:"p"},"name")," field are obviously required as they determine which template and constraint\nthat should be created. Other fiels such as ",Object(b.b)("inlineCode",{parentName:"p"},"enforcement_action"),", ",Object(b.b)("inlineCode",{parentName:"p"},"match.kinds"),", ",Object(b.b)("inlineCode",{parentName:"p"},"parameters")," do not always have to be set as they receive default values from the Helm chart.\nCheck the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/XenitAB/gatekeeper-library/blob/master/charts/gatekeeper-library-constraints/generated/defaults.yaml"}),"defaults file")," in gatekeeper-library to see\nwhat the default values are. It is reccomended to leave the ",Object(b.b)("inlineCode",{parentName:"p"},"match.kinds")," to the default value as most constraints act on specific resource types, and the default value is\nset to right right kind. With the configuration above the following template and constraint will be created. Note the ",Object(b.b)("inlineCode",{parentName:"p"},"mathc.kinds")," field in the constraint resource."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),'apiVersion: templates.gatekeeper.sh/v1beta1\nkind: ConstraintTemplate\nmetadata:\n  name: k8spspvolumetypes\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sPSPVolumeTypes\n      validation:\n        openAPIV3Schema:\n          properties:\n            volumes:\n              items:\n                type: string\n              type: array\n  targets:\n  - target: admission.k8s.gatekeeper.sh\n    rego: {REGO}\n---\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPSPVolumeTypes\nmetadata:\n  name: psp-volume-types\nspec:\n  enforcementAction: deny\n  match:\n    kinds:\n    - apiGroups:\n      - ""\n      kinds:\n      - Pod\n  parameters:\n    volumes:\n    - configMap\n    - downwardAPI\n    - emptyDir\n    - persistentVolumeClaim\n    - secret\n    - projected\n')),Object(b.b)("p",null,"New constraints have to be added to ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/xenitab/gatekeeper-library"}),"gatekeeper-library")," with a new version of the Helm chart. Then the Helm chart version\ncan be updated in the module, which enables use of the new constraints."),Object(b.b)("p",null,"The gatekeeper-library requires two Helm charts for things to work, one that first sets up ",Object(b.b)("inlineCode",{parentName:"p"},"ConstraintTemplate")," and after that one that creates the ",Object(b.b)("inlineCode",{parentName:"p"},"Constraint"),". This has\nto be done as otherwise there would be a chicken and the egg problem with the CRDs created by the ",Object(b.b)("inlineCode",{parentName:"p"},"ConstraintTemplate"),". This behavior is not visibile outside of the module\nas the same values are passed to both of the charts, there will never be a difference between the constraints created and the templates that exist."),Object(b.b)("h2",{id:"requirements"},"Requirements"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Version"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"requirement_terraform"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#requirement_terraform"}),"terraform")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0.15.3")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"requirement_helm"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#requirement_helm"}),"helm")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2.3.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"requirement_kubernetes"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#requirement_kubernetes"}),"kubernetes")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2.4.1")))),Object(b.b)("h2",{id:"providers"},"Providers"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Version"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"provider_helm"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#provider_helm"}),"helm")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2.3.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"provider_kubernetes"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#provider_kubernetes"}),"kubernetes")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2.4.1")))),Object(b.b)("h2",{id:"modules"},"Modules"),Object(b.b)("p",null,"No modules."),Object(b.b)("h2",{id:"resources"},"Resources"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://registry.terraform.io/providers/hashicorp/helm/2.3.0/docs/resources/release"}),"helm_release.gatekeeper")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"resource")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://registry.terraform.io/providers/hashicorp/helm/2.3.0/docs/resources/release"}),"helm_release.gatekeeper_constraints")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"resource")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://registry.terraform.io/providers/hashicorp/helm/2.3.0/docs/resources/release"}),"helm_release.gatekeeper_templates")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"resource")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://registry.terraform.io/providers/hashicorp/kubernetes/2.4.1/docs/resources/namespace"}),"kubernetes_namespace.this")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"resource")))),Object(b.b)("h2",{id:"inputs"},"Inputs"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"input_additional_assigns"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#input_additional_assigns"}),"additional","_","assigns")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Additional assigns that should be added"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("pre",null,"list(object({",Object(b.b)("br",null),"    name = string",Object(b.b)("br",null),"  }))")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"[]")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"input_additional_constraints"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#input_additional_constraints"}),"additional","_","constraints")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Additional constraints that should be added"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("pre",null,"list(object({",Object(b.b)("br",null),"    kind               = string",Object(b.b)("br",null),"    name               = string",Object(b.b)("br",null),"    enforcement_action = string",Object(b.b)("br",null),"    match = object({",Object(b.b)("br",null),"      kinds = list(object({",Object(b.b)("br",null),"        apiGroups = list(string)",Object(b.b)("br",null),"        kinds     = list(string)",Object(b.b)("br",null),"      }))",Object(b.b)("br",null),"      namespaces = list(string)",Object(b.b)("br",null),"    })",Object(b.b)("br",null),"    parameters = any",Object(b.b)("br",null),"  }))")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"[]")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"input_cloud_provider"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#input_cloud_provider"}),"cloud","_","provider")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Cloud provider to use."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},'"azure"')),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"input_enable_default_assigns"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#input_enable_default_assigns"}),"enable","_","default","_","assigns")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If enabled default assigns will be added"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"bool")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"input_enable_default_constraints"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#input_enable_default_constraints"}),"enable","_","default","_","constraints")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If enabled default constraints will be added"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"bool")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",{name:"input_excluded_namespaces"})," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#input_excluded_namespaces"}),"excluded","_","namespaces")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Namespaces to opt out of constraints and assigns"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"list(string)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("pre",null,"[",Object(b.b)("br",null),'  "kube-system",',Object(b.b)("br",null),'  "gatekeeper-system"',Object(b.b)("br",null),"]")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"no")))),Object(b.b)("h2",{id:"outputs"},"Outputs"),Object(b.b)("p",null,"No outputs."))}s.isMDXComponent=!0},142:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,u=p["".concat(l,".").concat(m)]||p[m]||d[m]||b;return a?r.a.createElement(u,c(c({ref:t},o),{},{components:a})):r.a.createElement(u,c({ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var o=2;o<b;o++)l[o]=a[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);