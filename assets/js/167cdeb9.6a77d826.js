"use strict";(self.webpackChunkhome=self.webpackChunkhome||[]).push([[4232],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1717:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var o=n(3117),a=n(102),r=(n(7294),n(3905)),i=["components"],l={id:"api-migrations",title:"API migrations"},p=void 0,s={unversionedId:"xks/developer-guide/api-migrations",id:"xks/developer-guide/api-migrations",title:"API migrations",description:"In Kubernetes API:s get continuously upgraded and deprecated.",source:"@site/docs/xks/developer-guide/api-migrations.md",sourceDirName:"xks/developer-guide",slug:"/xks/developer-guide/api-migrations",permalink:"/docs/xks/developer-guide/api-migrations",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/xks/developer-guide/api-migrations.md",tags:[],version:"current",frontMatter:{id:"api-migrations",title:"API migrations"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/xks/developer-guide/introduction"},next:{title:"Secrets Management",permalink:"/docs/xks/developer-guide/secrets-management"}},c=[{value:"Upgrading to Kubernetes 1.25",id:"upgrading-to-kubernetes-125",children:[{value:"CronJob",id:"cronjob",children:[],level:3},{value:"HorizontalPodAutoscaler",id:"horizontalpodautoscaler",children:[],level:3},{value:"PodDisruptionBudget",id:"poddisruptionbudget",children:[],level:3},{value:"PodSecurityPolicy",id:"podsecuritypolicy",children:[],level:3},{value:"Patching",id:"patching",children:[],level:3}],level:2},{value:"General API changes",id:"general-api-changes",children:[{value:"SecretProviderClass v1alpha1 to v1",id:"secretproviderclass-v1alpha1-to-v1",children:[],level:3},{value:"Flux sourcecontroller v1beta1 to v1beta2",id:"flux-sourcecontroller-v1beta1-to-v1beta2",children:[],level:3}],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In Kubernetes API:s get continuously upgraded and deprecated.\nAs a part of XKF we are in charge of upgrading the applications but it's up to you as a developer to upgrade the\nresources if you are utilizing them. We will of course inform you when it's time and summarize what needs to be done."),(0,r.kt)("p",null,"This page is about sharing that information."),(0,r.kt)("h2",{id:"upgrading-to-kubernetes-125"},"Upgrading to Kubernetes 1.25"),(0,r.kt)("h3",{id:"cronjob"},"CronJob"),(0,r.kt)("p",null,"CronJob ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion")," is moved from ",(0,r.kt)("inlineCode",{parentName:"p"},"batch/v1beta1")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"batch/v1"),".\nThe only thing you need to do is to change the API version."),(0,r.kt)("p",null,"From:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: foo\n")),(0,r.kt)("p",null,"To:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: foo\n")),(0,r.kt)("h3",{id:"horizontalpodautoscaler"},"HorizontalPodAutoscaler"),(0,r.kt)("p",null,"HorizontalPodAutoscaler ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion")," is moved from ",(0,r.kt)("inlineCode",{parentName:"p"},"autoscaling/v2beta1")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"autoscaling/v2"),"."),(0,r.kt)("p",null,"Changes include the ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion")," but there's also changes to how ",(0,r.kt)("inlineCode",{parentName:"p"},"targetAverageUtilization")," is used. See example below."),(0,r.kt)("p",null,"From:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: autoscaling/v2beta2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: foo\nspec:\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        targetAverageUtilization: 50\n\n    - type: Resource\n      resource:\n        name: memory\n        targetAverageUtilization: 50\n")),(0,r.kt)("p",null,"To:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: foo\nspec:\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        target:\n          type: Utilization\n          averageUtilization: 50\n    - type: Resource\n      resource:\n        name: memory\n        target:\n          type: Utilization\n          averageUtilization: 50\n")),(0,r.kt)("h3",{id:"poddisruptionbudget"},"PodDisruptionBudget"),(0,r.kt)("p",null,"PodDisruptionBudget ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion")," is moved from ",(0,r.kt)("inlineCode",{parentName:"p"},"policy/v1beta1")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"policy/v1"),".\nThe main thing you need to do is to change ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion"),"."),(0,r.kt)("p",null,"From:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: policy/v1beta1\nkind: PodDisruptionBudget\nmetadata:\n  name: foo\n")),(0,r.kt)("p",null,"To:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: foo\n")),(0,r.kt)("p",null,"Another important change is that in ",(0,r.kt)("inlineCode",{parentName:"p"},"policy/v1")," an empty ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.selector {}")," selects all pods in the namespace, when the previous ",(0,r.kt)("inlineCode",{parentName:"p"},"policy/v1beta1")," did not select any pods."),(0,r.kt)("h3",{id:"podsecuritypolicy"},"PodSecurityPolicy"),(0,r.kt)("p",null,"PodSecurityPolicy in the policy/v1beta1 API version will no longer be served in v1.25, and the PodSecurityPolicy admission controller will be removed. More information can be found ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/using-api/deprecation-guide/#psp-v125"},"here.")),(0,r.kt)("p",null,"This is not something that we use in XKF, but it is good to know."),(0,r.kt)("h3",{id:"patching"},"Patching"),(0,r.kt)("p",null,"If you have any kustomizations patching in different values between environments, or similar, these will also have to be changed to match the new ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion"),"."),(0,r.kt)("p",null,"From:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- path: pdb-patch.yaml\n  target:\n    group: policy\n    version: v1beta1\n    kind: PodDisruptionBudget\n    name: app\n")),(0,r.kt)("p",null,"To:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- path: pdb-patch.yaml\n  target:\n    group: policy\n    version: v1\n    kind: PodDisruptionBudget\n    name: app\n")),(0,r.kt)("h2",{id:"general-api-changes"},"General API changes"),(0,r.kt)("h3",{id:"secretproviderclass-v1alpha1-to-v1"},"SecretProviderClass v1alpha1 to v1"),(0,r.kt)("p",null,"SecretProviderClass ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion")," is moved from ",(0,r.kt)("inlineCode",{parentName:"p"},"secrets-store.csi.x-k8s.io/v1alpha1")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"secrets-store.csi.x-k8s.io/v1"),"."),(0,r.kt)("p",null,"The only thing you need to do is to change is the API version."),(0,r.kt)("p",null,"From:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: secrets-store.csi.x-k8s.io/v1alpha1\nkind: SecretProviderClass\nmetadata:\n  name: foo\nspec:\n  provider: <provider>\n  parameters:\n    objects: |\n      - objectName: "bar"\n        objectType: "<type>"\n      - objectName: "baz"\n        objectType: "<type>"\n')),(0,r.kt)("p",null,"To:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: foo\nspec:\n  provider: <provider>\n  parameters:\n    objects: |\n      - objectName: "bar"\n        objectType: "<type>"\n      - objectName: "baz"\n        objectType: "<type>"\n')),(0,r.kt)("h3",{id:"flux-sourcecontroller-v1beta1-to-v1beta2"},"Flux sourcecontroller v1beta1 to v1beta2"),(0,r.kt)("p",null,"The only thing that you need to change when moving ",(0,r.kt)("inlineCode",{parentName:"p"},"source.toolkit.fluxcd.io")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"source.toolkit.fluxcd.io/v1beta1"),"to ",(0,r.kt)("inlineCode",{parentName:"p"},"source.toolkit.fluxcd.io/v1beta2")," is the API version."),(0,r.kt)("p",null,"In XKF we handle the upgrade of your default GitRepository, but if you have created some other source object you will need to update it on your own."),(0,r.kt)("p",null,"Note that other Flux controllers (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"kustomization.toolkit.fluxcd.io")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"notification.toolkit.fluxcd.io"),") remain at ",(0,r.kt)("inlineCode",{parentName:"p"},"v1beta1"),"."))}d.isMDXComponent=!0}}]);