"use strict";(self.webpackChunkhome=self.webpackChunkhome||[]).push([[4880],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return t?n.createElement(f,i(i({ref:r},c),{},{components:t})):n.createElement(f,i({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3953:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var n=t(3117),o=t(102),a=(t(7294),t(3905)),i=t(4996),s=["components"],l={id:"index",title:"Overview"},u=void 0,c={unversionedId:"xks/operator-guide/index",id:"xks/operator-guide/index",title:"Overview",description:"Xenit Kubernetes Service (XKS) is an opinionated Kubernetes deployment on a public cloud provider's managed Kubernetes service. It combines a cloud provider's managed Kubernetes offering and ancillary services with additional configuration and services that run on top of Kubernetes.",source:"@site/docs/xks/operator-guide/index.md",sourceDirName:"xks/operator-guide",slug:"/xks/operator-guide/",permalink:"/docs/xks/operator-guide/",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/xks/operator-guide/index.md",tags:[],version:"current",frontMatter:{id:"index",title:"Overview"},sidebar:"docs",previous:{title:"Reports",permalink:"/docs/xks/developer-guide/reports"},next:{title:"Getting Started",permalink:"/docs/xks/operator-guide/getting-started"}},d=[{value:"Architecture",id:"architecture",children:[],level:2},{value:"Network diagram",id:"network-diagram",children:[],level:2},{value:"Terraform modules",id:"terraform-modules",children:[{value:"Governance",id:"governance",children:[],level:3},{value:"Core",id:"core",children:[],level:3},{value:"Hub",id:"hub",children:[],level:3},{value:"AKS",id:"aks",children:[],level:3}],level:2}],p={toc:d};function m(e){var r=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://xenit.se/it-tjanster/kubernetes-service/"},"Xenit Kubernetes Service")," (XKS) is an opinionated Kubernetes deployment on a public cloud provider's managed Kubernetes service. It combines a cloud provider's managed Kubernetes offering and ancillary services with additional configuration and services that run on top of Kubernetes."),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,"XKS is set up from a set of Terraform modules that when combined creates the full XKS service. There are multiple individual states that all fulfill their own purpose and build\nupon each other in a hierarchical manner. The first setup requires applying the Terraform in the correct order, but after that ordering should not matter. Separate states are used\nas it allows for a more flexible architecture that could be changed in parallel."),(0,a.kt)("img",{alt:"XKS Overview",src:(0,i.Z)("img/assets/xks/operator-guide/aks-overview.jpg")}),(0,a.kt)("h2",{id:"network-diagram"},"Network diagram"),(0,a.kt)("p",null,"Looking at a cluster, the simple network diagram looks like this:"),(0,a.kt)("img",{alt:"XKS Overview",src:(0,i.Z)("img/assets/xks/operator-guide/simple-network-design.jpg")}),(0,a.kt)("h2",{id:"terraform-modules"},"Terraform modules"),(0,a.kt)("p",null,"The following Terraform modules are used in XKS."),(0,a.kt)("h3",{id:"governance"},"Governance"),(0,a.kt)("p",null,"Governance is split into ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/terraform-modules/tree/main/modules/azure/governance-global"},"global")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/terraform-modules/tree/main/modules/azure/governance-regional"},"regional"),", it handles the creation and delegation of Azure Resource Groups, Azure KeyVaults, Azure AD groups, Service Principals and resources like that."),(0,a.kt)("h3",{id:"core"},"Core"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/terraform-modules/tree/main/modules/azure/core"},"Core")," sets up the main network for an environment."),(0,a.kt)("h3",{id:"hub"},"Hub"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/terraform-modules/tree/main/modules/azure/hub"},"Hub")," is setup in the production subscription and is used for things like Azure Pipelines agents."),(0,a.kt)("h3",{id:"aks"},"AKS"),(0,a.kt)("p",null,"The AKS Terraform contains three modules that are used to setup a Kubernetes cluster. To allow for blue/green deployments of AKS clusters resources have to be split up into\nglobal resources that can be shared between the clusters, and cluster specific resources."),(0,a.kt)("p",null,"The aks-global module contains the global resources like ACR, DNS and Azure AD configuration."),(0,a.kt)("p",null,"The aks and aks-core modules create a AKS cluster and configures it. This cluster will have a suffix, normally a number to allow for temporarily creating multiple clusters\nwhen performing a blue/green deployment of the clusters. Namespaces will be created in the cluster for each of the configured tenants. Each namespaces is linked to a resource\ngroup in Azure where namespace resources are expected to be created."),(0,a.kt)("img",{alt:"AKS Resource Groups",src:(0,i.Z)("img/assets/xks/operator-guide/aks-rg-xks-overview.jpg")}))}m.isMDXComponent=!0}}]);