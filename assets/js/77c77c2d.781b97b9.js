"use strict";(self.webpackChunkhome=self.webpackChunkhome||[]).push([[541],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(h,a(a({ref:n},u),{},{components:t})):r.createElement(h,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3919:function(e,n,t){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!r(e)}t.d(n,{b:function(){return r},Z:function(){return i}})},4996:function(e,n,t){t.d(n,{C:function(){return o},Z:function(){return a}});var r=t(2263),i=t(3919);function o(){var e=(0,r.Z)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,o=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,r){var o=void 0===r?{}:r,a=o.forcePrependBaseUrl,l=void 0!==a&&a,s=o.absolute,c=void 0!==s&&s;if(!t)return t;if(t.startsWith("#"))return t;if((0,i.b)(t))return t;if(l)return n+t;var u=t.startsWith(n)?t:n+t.replace(/^\//,"");return c?e+u:u}(o,t,e,n)}}}function a(e,n){return void 0===n&&(n={}),(0,o().withBaseUrl)(e,n)}},506:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=t(4996),l=["components"],s={id:"wsl2",title:"Working with XKF from Windows"},c=void 0,u={unversionedId:"xks/developer-guide/wsl2",id:"xks/developer-guide/wsl2",isDocsHomePage:!1,title:"Working with XKF from Windows",description:"The reason for this documentation is that we are using a number of Linux-based tools to be able to have a good integration with Windows, we recommend to use Linux as a base for this.",source:"@site/docs/xks/developer-guide/wsl2.md",sourceDirName:"xks/developer-guide",slug:"/xks/developer-guide/wsl2",permalink:"/docs/xks/developer-guide/wsl2",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/xks/developer-guide/wsl2.md",tags:[],version:"current",frontMatter:{id:"wsl2",title:"Working with XKF from Windows"},sidebar:"docs",previous:{title:"Starboard",permalink:"/docs/xks/developer-guide/starboard"},next:{title:"Overview",permalink:"/docs/xks/operator-guide/index"}},p=[{value:"Installation of WSL2 - Windows Subsystem for Linux",id:"installation-of-wsl2---windows-subsystem-for-linux",children:[],level:2},{value:"Install Docker-Desktop",id:"install-docker-desktop",children:[],level:2},{value:"Utilising Make with WSL2, Terraform and Docker",id:"utilising-make-with-wsl2-terraform-and-docker",children:[],level:2},{value:"Issues",id:"issues",children:[{value:"File lock issues",id:"file-lock-issues",children:[],level:3}],level:2}],d={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The reason for this documentation is that we are using a number of Linux-based tools to be able to have a good integration with Windows, we recommend to use Linux as a base for this.\nThis document is verified using Ubuntu version 20.04 but other distributions will most likely work."),(0,o.kt)("h2",{id:"installation-of-wsl2---windows-subsystem-for-linux"},"Installation of WSL2 - Windows Subsystem for Linux"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/wsl/install"},"Install via Powershell")),(0,o.kt)("p",null,"Installation is also possible via Microsoft Store. Search for \u201clinux\u201d."),(0,o.kt)("p",null,"Make sure that Windows Subsystem for Linux is enabled as a feature in Windows."),(0,o.kt)("p",null,"In Windows: Go to Control Panel \u2192 Programs and Features."),(0,o.kt)("p",null,"In the left-hand menu, select \u201cTurn Windows features on or off\u201d"),(0,o.kt)("img",{alt:"wsl-enable",src:(0,a.Z)("img/assets/xks/developer-guide/wsl-enable.png")}),(0,o.kt)("h2",{id:"install-docker-desktop"},"Install Docker-Desktop"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker-desktop"},"Download and install Docker.")),(0,o.kt)("p",null,'Once installation is complete, verify that the application works. We experienced issues when trying to start Docker-desktop within a managed organization using AD accounts, this caused an error with us not being members of a group called \u201cdocker-users\u201c.\nTo solve this, open up \u201cComputer Management\u201d in Windows as an administrator. Navigate to \u201clocal users and groups\u201d \u2192 Groups and locate the "docker-users" group and double-click.Press \u201cAdd\u201d and search for \u201cAuthenticated Users\u201d and add to the group.'),(0,o.kt)("p",null,"Now sign out from Windows and sign back in, and the Docker application should work."),(0,o.kt)("p",null,"Verify in settings that the WSL2-based engine is used."),(0,o.kt)("img",{alt:"docker1",src:(0,a.Z)("img/assets/xks/developer-guide/docker1.png")}),(0,o.kt)("p",null,"Also under settings, go to Resources \u2192 WSL Integration and verify that you have access to the WSL integration with your installed WSL (in this case Ubuntu), and make sure it is checked."),(0,o.kt)("img",{alt:"docker2",src:(0,a.Z)("img/assets/xks/developer-guide/docker2.png")}),(0,o.kt)("p",null,"To verify functionality:"),(0,o.kt)("p",null,"In your Ubuntu WSL2 instance - Run the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run hello-world\n")),(0,o.kt)("p",null,"Wait for the image to be pulled and if everything works properly the output should be:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Hello from Docker!\nThis message shows that your installation appears to be working correctly.")),(0,o.kt)("h2",{id:"utilising-make-with-wsl2-terraform-and-docker"},"Utilising Make with WSL2, Terraform and Docker"),(0,o.kt)("p",null,"We have noticed when running Terraform from within our Ubuntu instance, that there appears to be some network issues. We saw quite slow network connections, probably caused by the TCP connection, which resulted in the following error:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u2502 Error: Failed to install provider\n\u2502\n\u2502 Error while installing hashicorp/azurerm v2.64.0: local error: tls: bad record MAC")),(0,o.kt)("p",null,"We ran the Terraform command again - and it worked perfectly."),(0,o.kt)("h2",{id:"issues"},"Issues"),(0,o.kt)("h3",{id:"file-lock-issues"},"File lock issues"),(0,o.kt)("p",null,"If your ",(0,o.kt)("inlineCode",{parentName:"p"},".azure")," folder is mounted towards Windows from your WSL2 environment we have seen potential lock issues when running terraform and ",(0,o.kt)("inlineCode",{parentName:"p"},"azure-cli 2.32.0"),", this might apply to other versions as well."),(0,o.kt)("p",null,"We think this have something to do with how WSL2 and Windows manages locking of files, to workaround you can make sure that your ",(0,o.kt)("inlineCode",{parentName:"p"},".azure")," folder is only in your Linux environment."),(0,o.kt)("p",null,"Assuming that you have not defined a custom ",(0,o.kt)("inlineCode",{parentName:"p"},"AZURE_CONFIG_DIR")," you can perform the following to verify you are mounting your ",(0,o.kt)("inlineCode",{parentName:"p"},".azure")," folder to Windows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd\n$ ls -la\ndrwx------ 61 user1 user1    4096 Jan 14 09:21 .\ndrwxr-xr-x  4 root  root     4096 Feb 12  2021 ..\ndrwxr-xr-x  7 user1 user1    4096 Dec 12 13:04 .azure -> /mnt/c/Users/user1/.azure\n")),(0,o.kt)("p",null,"Running the following commands will create a new ",(0,o.kt)("inlineCode",{parentName:"p"},".azure")," folder in your current working directory and tell ",(0,o.kt)("inlineCode",{parentName:"p"},"azure-cli")," to use that folder to store its login data.\nRemember that the ",(0,o.kt)("inlineCode",{parentName:"p"},"export")," command only is per terminal. You can make the config persistent by adding the export command to your ",(0,o.kt)("inlineCode",{parentName:"p"},".bashrc")," file located in your home folder."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"export AZURE_CONFIG_DIR=$(pwd)/.azure\n# Store Azure CLI configuration here\n[ -d $(pwd)/.azure ] || mkdir $(pwd)/.azure\n# login to azure agaiin\naz login\n")),(0,o.kt)("p",null,"This is a example how the traceback look liked when we encountered this error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u2502 Error: getting authenticated object ID: Error parsing json result from the Azure CLI: Error waiting for the Azure CLI: exit status 1: ERROR: The command failed with an unexpected error. Here is the traceback:\n\u2502 ERROR: [Errno 2] No such file or directory\n\u2502 Traceback (most recent call last):\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/command_operation.py", line 352, in handler\n\u2502 client = self.client_factory(self.cli_ctx) if self.client_factory else None\n\u2502 TypeError: get_graph_client_signed_in_users() missing 1 required positional argument: \'_\'\n\u2502\n\u2502 During handling of the above exception, another exception occurred:\n\u2502\n\u2502 Traceback (most recent call last):\n\u2502 File "/opt/az/lib/python3.6/site-packages/knack/cli.py", line 231, in invoke\n\u2502 cmd_result = self.invocation.execute(args)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/__init__.py", line 657, in execute\n\u2502 raise ex\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/__init__.py", line 720, in _run_jobs_serially\n\u2502 results.append(self._run_job(expanded_arg, cmd_copy))\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/__init__.py", line 712, in _run_job\n\u2502 return cmd_copy.exception_handler(ex)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/command_modules/role/commands.py", line 69, in graph_err_handler\n\u2502 raise ex\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/__init__.py", line 691, in _run_job\n\u2502 result = cmd_copy(params)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/__init__.py", line 328, in __call__\n\u2502 return self.handler(*args, **kwargs)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/commands/command_operation.py", line 354, in handler\n\u2502 client = self.client_factory(self.cli_ctx, command_args) if self.client_factory else None\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/command_modules/role/commands.py", line 89, in get_graph_client_signed_in_users\n\u2502 return _graph_client_factory(cli_ctx).signed_in_user\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/command_modules/role/_client_factory.py", line 25, in _graph_client_factory\n\u2502 resource=cli_ctx.cloud.endpoints.active_directory_graph_resource_id)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/_profile.py", line 335, in get_login_credentials\n\u2502 credential = self._create_credential(account, client_id=client_id)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/_profile.py", line 588, in _create_credential\n\u2502 return identity.get_user_credential(username_or_sp_id)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/auth/identity.py", line 182, in get_user_credential\n\u2502 return UserCredential(self.client_id, username, **self._msal_app_kwargs)\n\u2502 File "/opt/az/lib/python3.6/site-packages/azure/cli/core/auth/msal_authentication.py", line 41, in __init__\n\u2502 accounts = self.get_accounts(username)\n\u2502 File "/opt/az/lib/python3.6/site-packages/msal/application.py", line 872, in get_accounts\n\u2502 accounts = self._find_msal_accounts(environment=self.authority.instance)\n\u2502 File "/opt/az/lib/python3.6/site-packages/msal/application.py", line 912, in _find_msal_accounts\n\u2502 query={\u200b\u200b"environment": environment}\u200b\u200b)\n\u2502 File "/opt/az/lib/python3.6/site-packages/msal_extensions/token_cache.py", line 53, in find\n\u2502 with CrossPlatLock(self._lock_location):\n\u2502 File "/opt/az/lib/python3.6/site-packages/msal_extensions/cache_lock.py", line 29, in __enter__\n\u2502 file_handle = self._lock.__enter__()\n\u2502 File "/opt/az/lib/python3.6/site-packages/portalocker/utils.py", line 199, in __enter__\n\u2502 return self.acquire()\n\u2502 File "/opt/az/lib/python3.6/site-packages/portalocker/utils.py", line 161, in acquire\n\u2502 fh = self._prepare_fh(fh)\n\u2502 File "/opt/az/lib/python3.6/site-packages/portalocker/utils.py", line 194, in _prepare_fh\n\u2502 fh.truncate(0)\n\u2502 FileNotFoundError: [Errno 2] No such file or directory\n\u2502 To open an issue, please run: \'az feedback\'\n\u2502\n\u2502 with provider["registry.terraform.io/hashicorp/azuread"],\n\u2502 on main.tf line 19, in provider "azuread":\n\u2502 19: provider "azuread" {\u200b\u200b}\u200b\u200b\n')))}m.isMDXComponent=!0}}]);