"use strict";(self.webpackChunkhome=self.webpackChunkhome||[]).push([[654],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3919:function(e,t,r){function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!n(e)}r.d(t,{b:function(){return n},Z:function(){return a}})},4996:function(e,t,r){r.d(t,{C:function(){return o},Z:function(){return i}});var n=r(2263),a=r(3919);function o(){var e=(0,n.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,r=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,r,n){var o=void 0===n?{}:n,i=o.forcePrependBaseUrl,l=void 0!==i&&i,u=o.absolute,s=void 0!==u&&u;if(!r)return r;if(r.startsWith("#"))return r;if((0,a.b)(r))return r;if(l)return t+r;var c=r.startsWith(t)?r:t+r.replace(/^\//,"");return s?e+c:c}(o,r,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},3825:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return f}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=r(4996),l=["components"],u={id:"blast-radius",title:"Blast Radius"},s=void 0,c={unversionedId:"xks/operator-guide/blast-radius",id:"xks/operator-guide/blast-radius",isDocsHomePage:!1,title:"Blast Radius",description:"As part of our terraform pipelines at Xenit we use something called OPA Blast Radius to make sure that we don't do to big changes during a single commit and don't remove needed infrastructure by mistake.",source:"@site/docs/xks/operator-guide/blast-radius.md",sourceDirName:"xks/operator-guide",slug:"/xks/operator-guide/blast-radius",permalink:"/docs/xks/operator-guide/blast-radius",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/xks/operator-guide/blast-radius.md",tags:[],version:"current",frontMatter:{id:"blast-radius",title:"Blast Radius"},sidebar:"docs",previous:{title:"Agents",permalink:"/docs/xks/operator-guide/agents"},next:{title:"Blue Green Clusters",permalink:"/docs/xks/operator-guide/blue-green"}},d=[{value:"Workflow",id:"workflow",children:[],level:2},{value:"OPA Blast Radius calculation",id:"opa-blast-radius-calculation",children:[],level:2},{value:"Overwrite OPA blast radius locally",id:"overwrite-opa-blast-radius-locally",children:[],level:2},{value:"Overwrite OPA blast radius in CI",id:"overwrite-opa-blast-radius-in-ci",children:[],level:2}],p={toc:d};function f(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As part of our terraform pipelines at Xenit we use something called OPA Blast Radius to make sure that we don't do to big changes during a single commit and don't remove needed infrastructure by mistake."),(0,o.kt)("h2",{id:"workflow"},"Workflow"),(0,o.kt)("p",null,"Our normal way of working uses a Makefile to make managing commands easier."),(0,o.kt)("p",null,"When running terraform locally and in our CI pipelines we use our Markdown files."),(0,o.kt)("h2",{id:"opa-blast-radius-calculation"},"OPA Blast Radius calculation"),(0,o.kt)("p",null,"The calculation of the blast radius value is done in our dockerfile that we start through our Makefile."),(0,o.kt)("p",null,"We use ",(0,o.kt)("a",{parentName:"p",href:"https://www.openpolicyagent.org/"},"OPA")," to calculate the blast radius it self.\nTo see exactly how we do it you can look in this ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/github-actions/blob/main/docker/terraform.sh"},"bash script")),(0,o.kt)("p",null,"The default value is currently set to 50."),(0,o.kt)("h2",{id:"overwrite-opa-blast-radius-locally"},"Overwrite OPA blast radius locally"),(0,o.kt)("p",null,"Run your make command as normally but when running plan add OPA_BLAST_RADIUS and the value you want."),(0,o.kt)("p",null,"make plan ENV=dev DIR=governance OPA_BLAST_RADIUS=51"),(0,o.kt)("h2",{id:"overwrite-opa-blast-radius-in-ci"},"Overwrite OPA blast radius in CI"),(0,o.kt)("p",null,"We are using Just Enough Administration(JEA) at Xenit and in many cases our admins don't have enough access to run terraform plan/apply locally.\nInstead we are force to use our CI/CD systems to manage this for us."),(0,o.kt)("p",null,"If you look at the Makefile you will see that we don't use any environment variables to overwrite the OPA_BLAST_RADIUS value.\nSo how should we change the OPA_BLAST_RADIUS without having to update the pipeline file every time we want to overwrite the default value?"),(0,o.kt)("p",null,"Sadly here comes some magic, if you look in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/azure-devops-templates/blob/594c374cb5418c415737fdb688049d4138f2d67f/terraform-docker/plan/main.yaml#L107"},"https://github.com/XenitAB/azure-devops-templates/"),'\nyou will see that we are listening on the environment variable "opaBlastRadius".'),(0,o.kt)("p",null,"So to overwrite the OPA_BLAST_RADIUS value during a single run we can utilize the opaBlastRadius environment variable."),(0,o.kt)("p",null,"To add a custom value to your pipeline in azure devops do the following:"),(0,o.kt)("p",null,'Pipelines -> "pipeline-you-want-to-run" -> Run pipeline -> Variables -> Add variable'),(0,o.kt)("p",null,"Add opaBlastRadius=51, it should look something like this:"),(0,o.kt)("img",{alt:"Blast Radius",src:(0,i.Z)("img/assets/xks/operator-guide/opaBlastRadius.png")}),(0,o.kt)("p",null,'To start the job you have to push "<-" and Run.'),(0,o.kt)("p",null,"Remember this variable is only set for one run"))}f.isMDXComponent=!0}}]);