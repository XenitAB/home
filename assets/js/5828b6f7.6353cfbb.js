"use strict";(self.webpackChunkhome=self.webpackChunkhome||[]).push([[7900],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,f=d["".concat(u,".").concat(h)]||d[h]||p[h]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7286:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=(n(4996),["components"]),l={id:"ci",title:"Continuous Integration"},u=void 0,c={unversionedId:"xks/developer-guide/ci-cd/ci",id:"xks/developer-guide/ci-cd/ci",title:"Continuous Integration",description:"XKF provides a number of base templates for CI and CD, in this part we will walk you through the CI pipeline.",source:"@site/docs/xks/developer-guide/ci-cd/ci.md",sourceDirName:"xks/developer-guide/ci-cd",slug:"/xks/developer-guide/ci-cd/ci",permalink:"/docs/xks/developer-guide/ci-cd/ci",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/xks/developer-guide/ci-cd/ci.md",tags:[],version:"current",frontMatter:{id:"ci",title:"Continuous Integration"},sidebar:"docs",previous:{title:"Container Security",permalink:"/docs/xks/developer-guide/container-security"},next:{title:"Continuous Delivery",permalink:"/docs/xks/developer-guide/ci-cd/cd"}},s=[{value:"Hadolint",id:"hadolint",children:[],level:2},{value:"Trivy",id:"trivy",children:[],level:2},{value:"Horusec",id:"horusec",children:[{value:"To enable Horusec in your CI pipeline",id:"to-enable-horusec-in-your-ci-pipeline",children:[],level:3}],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"XKF provides a number of base ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/azure-devops-templates/blob/main/gitops-v2/"},"templates")," for CI and CD, in this part we will walk you through the CI pipeline.\nThe core feature of the CI pipeline is that it generates a artifactory containing the application container."),(0,i.kt)("p",null,"The CI triggers the CD that will grab the container artifact and push it to a central container registry, Azure uses ACR and AWS uses ECR."),(0,i.kt)("p",null,"When following these docs we assume that you already have imported the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/XenitAB/azure-devops-templates#usage"},"azure-devops-templates")," to your project."),(0,i.kt)("p",null,"There are a number of extra addons that you can enable on your build stage that we will cover below."),(0,i.kt)("h2",{id:"hadolint"},"Hadolint"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/hadolint/hadolint"},"Hadolint")," is a linter for container files and gives you suggestions on how to follow best practices."),(0,i.kt)("p",null,"This check is enabled by default and you can disable it by adding:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-.yaml"},"dockerLint:\n    enabled: false\n    ignoreRuleViolations: false\n")),(0,i.kt)("p",null,"You can add a config file for hadolint where you can\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hadolint/hadolint#configure"},"ignore")," specific errors."),(0,i.kt)("h2",{id:"trivy"},"Trivy"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/aquasecurity/trivy"},"Trivy")," is a container image scanner\nin a cli tool used to scan for CVE:s in both your code and base image."),(0,i.kt)("p",null,"To scan the image:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"trivy <image-name>\n")),(0,i.kt)("p",null,"After we have built the image we scan it and send you a report."),(0,i.kt)("p",null,"If you want to ignore specific Trivy errors you can create a .trivyignore file.\nFor example it can look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-.trivyignore"},"CVE-2020-29652\n")),(0,i.kt)("p",null,"If you want to disable Trivy you can do so by appending the following to your CI file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-.yaml"},"imageScan\n    enable: true\n    ignoreRuleViolations: true\n")),(0,i.kt)("h2",{id:"horusec"},"Horusec"),(0,i.kt)("p",null,"A CLI tool to scan your application code for security issues that is disabled by default."),(0,i.kt)("h3",{id:"to-enable-horusec-in-your-ci-pipeline"},"To enable Horusec in your CI pipeline"),(0,i.kt)("p",null,"Before enabling Horusec in your CI pipeline you should configure what issues your CI pipeline should catch:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"horusec generate\n")),(0,i.kt)("p",null,"This will generate a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"horusec-config.json"),", in this file you can configure everything Horusec should scan and report."),(0,i.kt)("p",null,"You can find more ",(0,i.kt)("a",{parentName:"p",href:"https://horusec.io/docs/cli/resources/#global-flags"},"Horusec config flags here"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Key config values:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"horusecCliSeveritiesToIgnore: What severities do you want to show?"),(0,i.kt)("li",{parentName:"ul"},"horusecCliFilesOrPathsToIgnore: What paths do you want to ignore?")),(0,i.kt)("p",null,"To save time it is easy to run Horusec locally:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"horusec start -p .\n")))}d.isMDXComponent=!0}}]);