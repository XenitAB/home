(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{123:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),c=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},d=function(e){var t=c(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,f=d["".concat(i,".").concat(p)]||d[p]||b[p]||o;return n?a.a.createElement(f,u(u({ref:t},s),{},{components:n})):a.a.createElement(f,u({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},125:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(21);t.default=function(){var e=Object(r.useContext)(a.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},127:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i}));var r=n(125),a=n(129);function o(){var e=Object(r.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var o=void 0===r?{}:r,i=o.forcePrependBaseUrl,u=void 0!==i&&i,l=o.absolute,s=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if(Object(a.b)(n))return n;if(u)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return s?e+c:c}(o,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},129:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}))},61:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),o=(n(0),n(123)),i=n(127),u={id:"blast-radius",title:"OPA Blast Radius"},l={unversionedId:"documentation/kubernetes/blast-radius",id:"documentation/kubernetes/blast-radius",isDocsHomePage:!1,title:"OPA Blast Radius",description:"As part of our terraform pipelines at Xenit we use something called OPA Blast Radius to make sure that we don't do to big changes during a single commit and don't remove needed infrastructure by mistake.",source:"@site/docs/documentation/kubernetes/blast-radius.md",slug:"/documentation/kubernetes/blast-radius",permalink:"/docs/documentation/kubernetes/blast-radius",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/documentation/kubernetes/blast-radius.md",version:"current"},s=[{value:"Workflow",id:"workflow",children:[]},{value:"OPA Blast Radius calculation",id:"opa-blast-radius-calculation",children:[]},{value:"Overwrite OPA blast radius locally",id:"overwrite-opa-blast-radius-locally",children:[]},{value:"Overwrite OPA blast radius in CI",id:"overwrite-opa-blast-radius-in-ci",children:[]}],c={rightToc:s};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"As part of our terraform pipelines at Xenit we use something called OPA Blast Radius to make sure that we don't do to big changes during a single commit and don't remove needed infrastructure by mistake."),Object(o.b)("h2",{id:"workflow"},"Workflow"),Object(o.b)("p",null,"Our normal way of working uses a Makefile to make managing commands easier."),Object(o.b)("p",null,"When running terraform locally and in our CI pipelines we use our Markdown files."),Object(o.b)("h2",{id:"opa-blast-radius-calculation"},"OPA Blast Radius calculation"),Object(o.b)("p",null,"The calculation of the blast radius value is done in our dockerfile that we start through our Makefile."),Object(o.b)("p",null,"We use ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.openpolicyagent.org/"}),"OPA")," to calculate the blast radius it self.\nTo see exactly how we do it you can look in this ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/XenitAB/github-actions/blob/main/docker/terraform.sh"}),"bash script")),Object(o.b)("p",null,"The default value is currently set to 50."),Object(o.b)("h2",{id:"overwrite-opa-blast-radius-locally"},"Overwrite OPA blast radius locally"),Object(o.b)("p",null,"Run your make command as normally but when running plan add OPA_BLAST_RADIUS and the value you want."),Object(o.b)("p",null,"make plan ENV=dev DIR=governance OPA_BLAST_RADIUS=51"),Object(o.b)("h2",{id:"overwrite-opa-blast-radius-in-ci"},"Overwrite OPA blast radius in CI"),Object(o.b)("p",null,"We are using Just Enough Administration(JEA) at Xenit and in many cases our admins don't have enough access to run terraform plan/apply locally.\nInstead we are force to use our CI/CD systems to manage this for us."),Object(o.b)("p",null,"If you look at the Makefile you will see that we don't use any environment variables to overwrite the OPA_BLAST_RADIUS value.\nSo how should we change the OPA_BLAST_RADIUS without having to update the pipeline file every time we want to overwrite the default value?"),Object(o.b)("p",null,"Sadly here comes some magic, if you look in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/XenitAB/azure-devops-templates/blob/594c374cb5418c415737fdb688049d4138f2d67f/terraform-docker/plan/main.yaml#L107"}),"https://github.com/XenitAB/azure-devops-templates/"),'\nyou will see that we are listening on the environment variable "opaBlastRadius".'),Object(o.b)("p",null,"So to overwrite the OPA_BLAST_RADIUS value during a single run we can utilize the opaBlastRadius environment variable."),Object(o.b)("p",null,"To add a custom value to your pipeline in azure devops do the following:"),Object(o.b)("p",null,'Pipelines -> "pipeline-you-want-to-run" -> Run pipeline -> Variables -> Add variable'),Object(o.b)("p",null,"Add opaBlastRadius=51, it should look something like this:"),Object(o.b)("img",{alt:"Blast Radius",src:Object(i.a)("img/blast-radius/opaBlastRadius.png")}),Object(o.b)("p",null,'To start the job you have to push "<-" and Run.'),Object(o.b)("p",null,"Remember this variable is only set for one run"))}d.isMDXComponent=!0}}]);