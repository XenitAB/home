(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{100:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var a=r(0),n=r.n(a);function b(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){b(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},b=Object.keys(e);for(a=0;a<b.length;a++)r=b[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)r=b[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=n.a.createContext({}),p=function(e){var t=n.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},j=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,b=e.originalType,l=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),u=p(r),j=a,d=u["".concat(l,".").concat(j)]||u[j]||O[j]||b;return r?n.a.createElement(d,c(c({ref:t},i),{},{components:r})):n.a.createElement(d,c({ref:t},i))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=r.length,l=new Array(b);l[0]=j;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var i=2;i<b;i++)l[i]=r[i];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,r)}j.displayName="MDXCreateElement"},142:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/fluxcd-v2-cd7b8300384cf8a51744bb537697956d.jpg"},92:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return o})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(7),b=(r(0),r(100)),l={title:"Flux V2",slug:"/terraform-modules/kubernetes/fluxcd-v2",custom_edit_url:"https://github.com/XenitAB/terraform-modules/edit/main/modules/kubernetes/fluxcd-v2/README.md"},c={unversionedId:"terraform-modules/kubernetes/fluxcd-v2",id:"terraform-modules/kubernetes/fluxcd-v2",isDocsHomePage:!1,title:"Flux V2",description:"Installs and configures flux2 with Azure DevOps.",source:"@site/docs/terraform-modules/kubernetes/fluxcd-v2.md",slug:"/terraform-modules/kubernetes/fluxcd-v2",permalink:"/docs/terraform-modules/kubernetes/fluxcd-v2",editUrl:"https://github.com/XenitAB/terraform-modules/edit/main/modules/kubernetes/fluxcd-v2/README.md",version:"current",sidebar:"docs",previous:{title:"Flux (v1)",permalink:"/docs/terraform-modules/kubernetes/fluxcd-v1"},next:{title:"Helm Operator (helm-operator)",permalink:"/docs/terraform-modules/kubernetes/helm-operator"}},o=[{value:"Requirements",id:"requirements",children:[]},{value:"Providers",id:"providers",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Outputs",id:"outputs",children:[]}],i={rightToc:o};function p(e){var t=e.components,l=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},i,l,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Installs and configures ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/fluxcd/flux2"}),"flux2")," with Azure DevOps."),Object(b.b)("p",null,"The module is meant to offer a full bootstrap and confiugration of a Kubernetes cluster",Object(b.b)("br",{parentName:"p"}),"\n",'with Fluxv2. A "root" repository is created for the bootstrap configuration along with a',Object(b.b)("br",{parentName:"p"}),"\n","repository per namepsace passed in the variables. The root repository will receive ",Object(b.b)("inlineCode",{parentName:"p"},"cluster-admin"),Object(b.b)("br",{parentName:"p"}),"\n","permissions in the cluster while each of the namespace repositories will be limited to their",Object(b.b)("br",{parentName:"p"}),"\n","repsective namespace. The CRDs, component deployments and bootstrap configuration are both",Object(b.b)("br",{parentName:"p"}),"\n","added to the Kubernetes cluster and commited to the root repository. While the namespace",Object(b.b)("br",{parentName:"p"}),"\n","configuration is only comitted to the root repository and expected to be reconciled through",Object(b.b)("br",{parentName:"p"}),"\n","the bootstrap configuration."),Object(b.b)("p",null,Object(b.b)("img",{alt:"flux-arch",src:r(142).default})),Object(b.b)("h2",{id:"requirements"},"Requirements"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Version"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"terraform"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"0.13.5")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"azuredevops"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"0.2.1")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"flux"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"0.0.4")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"kubectl"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1.9.1")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"kubernetes"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1.13.3")))),Object(b.b)("h2",{id:"providers"},"Providers"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Version"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"azuredevops"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"0.2.1")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"flux"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"0.0.4")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"kubectl"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1.9.1")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"kubernetes"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1.13.3")))),Object(b.b)("h2",{id:"inputs"},"Inputs"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"azdo","_","org"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Azure DevOps organization for bootstrap repository"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"n/a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"yes")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"azdo","_","pat"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"PAT to authenticate with Azure DevOps"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"n/a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"yes")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"azdo","_","proj"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Azure DevOps project for bootstrap repository"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"n/a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"yes")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"azdo","_","repo"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Name of repository to bootstrap from"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},'"fleet-infra"')),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"branch"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to reconcile bootstrap from"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},'"master"')),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"no")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"git","_","path"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to reconcile bootstrap from"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"n/a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"yes")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"namespaces"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The namespaces to configure flux with"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("pre",null,"list(",Object(b.b)("br",null),"    object({",Object(b.b)("br",null),"      name = string",Object(b.b)("br",null),"      flux = object({",Object(b.b)("br",null),"        enabled      = bool",Object(b.b)("br",null),"        azdo_org     = string",Object(b.b)("br",null),"        azdo_project = string",Object(b.b)("br",null),"        azdo_repo    = string",Object(b.b)("br",null),"      })",Object(b.b)("br",null),"    })",Object(b.b)("br",null),"  )")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"n/a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"yes")))),Object(b.b)("h2",{id:"outputs"},"Outputs"),Object(b.b)("p",null,"No output."))}p.isMDXComponent=!0}}]);