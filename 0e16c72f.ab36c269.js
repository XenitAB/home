(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{130:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),l=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),b=r,h=p["".concat(a,".").concat(b)]||p[b]||d[b]||o;return n?i.a.createElement(h,s(s({ref:t},u),{},{components:n})):i.a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},131:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n(21);t.default=function(){var e=Object(r.useContext)(i.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},133:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return a}));var r=n(131),i=n(134);function o(){var e=Object(r.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var o=void 0===r?{}:r,a=o.forcePrependBaseUrl,s=void 0!==a&&a,c=o.absolute,u=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if(Object(i.b)(n))return n;if(s)return t+n;var l=n.startsWith(t)?n:t+n.replace(/^\//,"");return u?e+l:l}(o,n,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},134:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!r(e)}n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return i}))},63:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),o=(n(0),n(130)),a=n(133),s={id:"developer-guide",title:"Developer Guide"},c={unversionedId:"services/xks/developer-guide",id:"services/xks/developer-guide",isDocsHomePage:!1,title:"Developer Guide",description:"This guide assumes that you have been added to one or more resource groups with a configured Kubernetes namespace. Before going through the developer guide it is good to make",source:"@site/docs/services/xks/devloper-guide.md",slug:"/services/xks/developer-guide",permalink:"/docs/services/xks/developer-guide",editUrl:"https://github.com/xenitab/xenitab.github.io/edit/main/docs/services/xks/devloper-guide.md",version:"current",sidebar:"docs",previous:{title:"Azure DevOps agents",permalink:"/docs/services/xks/azure-devops-agents"},next:{title:"Contributing",permalink:"/docs/terraform-modules"}},u=[{value:"Kubectl Configuration",id:"kubectl-configuration",children:[]},{value:"Continous Delivery",id:"continous-delivery",children:[]},{value:"Network Policies",id:"network-policies",children:[]},{value:"Constraint Policies",id:"constraint-policies",children:[]},{value:"Ingress",id:"ingress",children:[]},{value:"Azure AD Identity",id:"azure-ad-identity",children:[]},{value:"Setup CI/CD pipeline",id:"setup-cicd-pipeline",children:[{value:"Enable CI user to push to gitops repo",id:"enable-ci-user-to-push-to-gitops-repo",children:[]},{value:"Service connections",id:"service-connections",children:[]}]}],l={rightToc:u};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This guide assumes that you have been added to one or more resource groups with a configured Kubernetes namespace. Before going through the developer guide it is good to make\nsure that you understand the basics in the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"../../documentation/kubernetes/oneoone"}),"101")," guide."),Object(o.b)("h2",{id:"kubectl-configuration"},"Kubectl Configuration"),Object(o.b)("p",null,"You can run the following command to add the AKS cluster to your kubeconfig assuming that you have installed the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"}),"Azure CLI"),"\nand ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli"}),"authenticated with the azure portal"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"az aks get-credentials --resource-group rg-dev-we-aks --name aks-dev-we-aks1\n")),Object(o.b)("h2",{id:"continous-delivery"},"Continous Delivery"),Object(o.b)("p",null,"Continous Delivery (CD) should be the only way to make changes to running applications in the XKS service. This is to ensure that changes are consistent and tracked in a centrailized\nmanner that can be observed by all."),Object(o.b)("h2",{id:"network-policies"},"Network Policies"),Object(o.b)("p",null,"By default each namespace is limited in the permitted network trafic. Pods in the namespaces are allowed to egress freely out to the internet and comminicate with other pods\nin the same namespace. It is however restricted when it comes to communicating with other pods in other namespaces, unless explicitly configured to be allowed this is not possible."),Object(o.b)("h2",{id:"constraint-policies"},"Constraint Policies"),Object(o.b)("p",null,"Certain policies will always be enforced in the cluster as a guard rail to minimize the risk of security exposures. The policies are implemented on the Kubernetes API level so that\nany request to create or update a Kubernetes resource will first have to pass through the policy check. If the resource in question does not comform to the policy it will be rejected\nby the API server when applying the change. Knowing this is important as certain features or options documented on the internet may not be availible or restricted in the XKS service.\nThis can include things like certain types of volume mounts, labeling requirements or container capabilities for a pod."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Need full list of default constraints")),Object(o.b)("h2",{id:"ingress"},"Ingress"),Object(o.b)("p",null,"The XKS service comes pre configured with external dns, cert manager and the nginx ingress controller to provide a secure method for external traffic to reach applications in the\nKubernetes cluster. The three projects work together to enable automatic DNS configuration, certificate provisioning and traffic routing. Below is an example of a ingress resource\nwhich configures securet HTTPS ingress."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: foo\n  namespace: bar\n  annotations:\n    kubernetes.io/ingress.class: nginx\nspec:\n  rules:\n  - host: foo.dev.example.com\n    http:\n      paths:\n      - backend:\n          serviceName: foo\n          servicePort: http\n  tls:\n    - hosts:\n      - foo.dev.example.com\n")),Object(o.b)("p",null,"It is useful to be aware of ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#annotations"}),"annotation configuration")," in the nginx ingress controller.\nSometimes a specific ingress requires custom behavior that is not default in the ingress controller, this behavior can be customized with the help of annotations for a specific ingress resource.\nFor example changing the client body buffer size may be useful if the header size in a request is larger than the buffer."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: foo\n  namespace: bar\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/client-body-buffer-size: 1M\nspec:\n  rules:\n  - host: foo.dev.example.com\n    http:\n      paths:\n      - backend:\n          serviceName: foo\n          servicePort: http\n  tls:\n    - hosts:\n      - foo.dev.example.com\n")),Object(o.b)("h2",{id:"azure-ad-identity"},"Azure AD Identity"),Object(o.b)("h2",{id:"setup-cicd-pipeline"},"Setup CI/CD pipeline"),Object(o.b)("p",null,"At Xenit we have created a CI/CD template to make it easier to get started with GitOps in our case using FluxV2 and the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://toolkit.fluxcd.io/"}),"GitOps toolkit"),"."),Object(o.b)("p",null,"You can find the base for all our azure devops pipelines in our ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/XenitAB/azure-devops-templates/tree/main/gitops-v2"}),"Azure Devops Templates repo"),"."),Object(o.b)("p",null,"Follow the example documentation on how to setup your base repo.\nBellow we will explain how to do the manual steps that is needed to get Azure Devops to allow some of the flows that we are making."),Object(o.b)("h3",{id:"enable-ci-user-to-push-to-gitops-repo"},"Enable CI user to push to gitops repo"),Object(o.b)("p",null,"The core feature of the gitops repo is that one of the pipelines automatically updates the image tag in your repository so flux will automatically update your deployment in kubernetes."),Object(o.b)("p",null,"We have to grant it permissions to do this, sadly manually..."),Object(o.b)("img",{alt:"CI access",src:Object(a.a)("img/developer-guide/gitops_repo_settings.png")}),Object(o.b)("h3",{id:"service-connections"},"Service connections"),Object(o.b)("p",null,"To be able to talk from Azure DevOps to AKS using our gitops pipelines we also need to configure service connections to tenant namespace.\nSadly setting up the Service Connections is a manual step."),Object(o.b)("p",null,"Get the needed config."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),'az keyvault secret show --vault-name <vault-name> --name <secret-name> -o tsv --query value\n# Example\naz keyvault secret show --vault-name kv-prod-we-core-1337 --name sp-rg-xks-prod-backend-contributor -o tsv --query value\n\n# The output will look something like this\n{"clientId":"12345","clientSecret":"SoMuchSecret","subscriptionId":"sub-id","tenantId":"tenant-id"}\n')),Object(o.b)("p",null,"In Azure DevOps:\nProject settings -> Service connections -> New service connection -> Azure Resource Manager -> Service principal (manual)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Subscription Id = subscriptionId"),Object(o.b)("li",{parentName:"ul"},"Service Principal Id = clientId"),Object(o.b)("li",{parentName:"ul"},"Service principal key = clientSecret"),Object(o.b)("li",{parentName:"ul"},"Tenant ID = tenantId"),Object(o.b)("li",{parentName:"ul"},"Service connection name = random-name")))}p.isMDXComponent=!0}}]);